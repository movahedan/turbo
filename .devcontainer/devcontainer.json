// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
	"name": "Repo",
	// Use the new development compose files for hot reload support
	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": ["docker-compose.dev.yml"],
	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "vscode",
	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/app",
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers/features/git:1": {
			"version": "latest",
			"ppa": true
		},
		"ghcr.io/devcontainers/features/github-cli:1": {
			"installDirectlyFromGitHubRelease": true,
			"version": "latest"
		},
		"ghcr.io/shyim/devcontainers-features/bun:0": "latest",
		"ghcr.io/devcontainers/features/common-utils:2": {
			"installZsh": false,
			"configureZshAsDefaultShell": false,
			"installOhMyZsh": false,
			"upgradePackages": false,
			"username": "automatic",
			"userUid": "automatic",
			"userGid": "automatic"
		}
	},
	// Mount Docker socket for Docker-from-Docker (Linux/macOS)
	// Windows uses Docker Desktop with different connection method
	"mounts": [
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
	],
	// Set PROJECT_ROOT for docker-compose volume mounting (use host path, not container path)
	"remoteEnv": {
		"PROJECT_ROOT": "${localWorkspaceFolder}",
		"HOST_PROJECT_PATH": "${localWorkspaceFolder}",
		"COMPOSE_PROJECT_NAME": "repo"
	},
	// Enable Docker access for devcontainer user
	"remoteUser": "vscode-user",
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [],
	// Start only the vscode service (app containers managed separately)
	"runServices": ["vscode"],
	// Setup Docker permissions and start development environment
	"postCreateCommand": "bash .devcontainer/setup-docker.sh",
	// Keep containers running for better development experience
	"shutdownAction": "stopCompose",
	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	"customizations": {
		"vscode": {
			"extensions": [
				"anysphere.remote-containers",
				"ms-vscode.vscode-typescript-next",
				"YoavBls.pretty-ts-errors",
				"steoates.autoimport",
				"oven.bun-vscode",
				"github.vscode-github-actions",
				"maptz.camelcasenavigation",
				"streetsidesoftware.code-spell-checker",
				"biomejs.biome",
				"vivaxy.vscode-conventional-commits",
				"ms-azuretools.vscode-docker",
				"bierner.markdown-preview-github-styles"
			],
			"settings": {
				"editor.formatOnSave": true,
				"biome.lsp.trace.server": "verbose",
				"biome.requireConfigFile": true,
				"biome.enabled": true,
				"editor.codeActionsOnSave": {
					"source.fixAll.biome": "explicit",
					"source.organizeImports.biome": "explicit"
				},
				"editor.defaultFormatter": "biomejs.biome",
				"[json]": {
					"editor.defaultFormatter": "biomejs.biome"
				},
				"[jsonc]": {
					"editor.defaultFormatter": "biomejs.biome"
				},
				"[html]": {
					"editor.defaultFormatter": "biomejs.biome"
				},
				"[css]": {
					"editor.defaultFormatter": "biomejs.biome"
				},
				"[typescript]": {
					"editor.defaultFormatter": "biomejs.biome"
				},
				"[typescriptreact]": {
					"editor.defaultFormatter": "biomejs.biome"
				},
				"[javascript]": {
					"editor.defaultFormatter": "biomejs.biome"
				},
				"[javascriptreact]": {
					"editor.defaultFormatter": "biomejs.biome"
				},
				"conventionalCommits.scopes": [
					"repo",
					"admin",
					"api",
					"storefront",
					"blog",
					"ui"
				],
				"typescript.preferences.useAliasesForRenames": false,
				"typescript.preferences.includePackageJsonAutoImports": "on",
				"typescript.workspaceSymbols.scope": "allOpenProjects",
				"typescript.enablePromptUseWorkspaceTsdk": true,
				// Hot reload optimization settings
				"files.watcherExclude": {
					"**/node_modules/**": true,
					"**/.turbo/**": true,
					"**/.next/**": true,
					"**/dist/**": true,
					"**/.git/**": true
				},
				"search.exclude": {
					"**/node_modules": true,
					"**/.turbo": true,
					"**/.next": true,
					"**/dist": true
				},
				// Simple colorful navbar
				"workbench.colorCustomizations": {
					"activityBar.activeBackground": "#93e6fc",
					"activityBar.activeBorder": "#fa45d4",
					"activityBar.background": "#93e6fc",
					"activityBar.foreground": "#15202b",
					"activityBar.inactiveForeground": "#15202b99",
					"activityBarBadge.background": "#fa45d4",
					"activityBarBadge.foreground": "#15202b",
					"statusBar.background": "#61dafb",
					"statusBar.foreground": "#15202b",
					"statusBarItem.hoverBackground": "#2fcefa",
					"titleBar.activeBackground": "#61dafb",
					"titleBar.activeForeground": "#15202b",
					"titleBar.inactiveBackground": "#61dafb99",
					"titleBar.inactiveForeground": "#15202b99",
					"sash.hoverBorder": "#93e6fc",
					"statusBarItem.remoteBackground": "#61dafb",
					"statusBarItem.remoteForeground": "#15202b",
					"commandCenter.border": "#15202b99"
				}
			}
		}
	}
}
